int add(int, int);
int subtract(int, int);
int multiply(int, int);
float divide(int, int);
int modulus(int, int);
bool is_prime(int, int*, int*);
unsigned long long factorial(int);
double power(double, int);
void fibonacci(int);

// Addition
int add(int a, int b) {
    return a + b;
}

// Subtraction
int subtract(int a, int b) {
    return a - b;
}

// Multiplication
int multiply(int a, int b) {
    return a * b;
}

// Division
float divide(int a, int b) {
    if (b == 0) {
        printf("Error: Division by zero is not allowed.\n");
        return 0;
    }
    return (float)a / b;
}

// Modulus
int modulus(int a, int b) {
    if (b == 0) {
        printf("Error: Modulus by zero is not allowed.\n");
        return 0;
    }
    return a % b;
}

// Prime checking function
bool is_prime(int num, int *factor1, int *factor2) {
    if (num < 2) return false;
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            *factor1 = i;
            *factor2 = num / i;
            return false;
        }
    }
    return true;
}

// Factorial function
unsigned long long factorial(int num) {
    if (num < 0) {
        printf("Error: Factorial is not defined for negative numbers.\n");
        return 0;
    }
    unsigned long long fact = 1;
    for (int i = 1; i <= num; i++) {
        fact *= i;
    }
    return fact;
}

// Power function (base^exponent)
double power(double base, int exponent) {
    double result = 1;
    for (int i = 0; i < exponent; i++) {
        result *= base;
    }
    return result;
}

// Fibonacci sequence generator
void fibonacci(int n) {
    if (n < 1) {
        printf("Error: Number of terms must be positive.\n");
        return;
    }

    int fib[n];
    fib[0] = 0;
    if (n > 1) fib[1] = 1;

    for (int i = 2; i < n; i++) {
        fib[i] = fib[i - 1] + fib[i - 2];
    }

    printf("First %d Fibonacci numbers: ", n);
    for (int i = 0; i < n; i++) {
        printf("%d ", fib[i]);
    }
    printf("\n");
}

int main() {
    int choice;
    do {
        // Display menu
        printf("\nCalculator Menu:\n");
        printf("(1) Addition\n");
        printf("(2) Subtraction\n");
        printf("(3) Multiplication\n");
        printf("(4) Division\n");
        printf("(5) Modulus (integers only)\n");
        printf("(6) Test if prime (integers only)\n");
        printf("(7) Factorial (integers only)\n");
        printf("(8) Power\n");
        printf("(9) Fibonacci Sequence\n");
        printf("(0) Exit\n");
        printf("Please choose an operation: ");
        scanf("%d", &choice);

        int num1, num2, factor1, factor2;
        switch (choice) {
            case 1:
                printf("Enter the first number: ");
                scanf("%d", &num1);
                printf("Enter the second number: ");
                scanf("%d", &num2);
                printf("%d + %d = %d\n", num1, num2, add(num1, num2));
                break;
            case 2:
                printf("Enter the first number: ");
                scanf("%d", &num1);
                printf("Enter the second number: ");
                scanf("%d", &num2);
                printf("%d - %d = %d\n", num1, num2, subtract(num1, num2));
                break;
            case 3:
                printf("Enter the first number: ");
                scanf("%d", &num1);
                printf("Enter the second number: ");
                scanf("%d", &num2);
                printf("%d * %d = %d\n", num1, num2, multiply(num1, num2));
                break;
            case 4:
                printf("Enter the first number: ");
                scanf("%d", &num1);
                printf("Enter the second number: ");
                scanf("%d", &num2);
                printf("%d / %d = %.2f\n", num1, num2, divide(num1, num2));
                break;
            case 5:
                printf("Enter the first number: ");
                scanf("%d", &num1);
                printf("Enter the second number: ");
                scanf("%d", &num2);
                printf("%d %% %d = %d\n", num1, num2, modulus(num1, num2));
                break;
            case 6:
                printf("Enter the number to be tested: ");
                scanf("%d", &num1);
                if (is_prime(num1, &factor1, &factor2))
                    printf("%d is a prime number.\n", num1);
                else
                    printf("Not prime: %d x %d = %d\n", factor1, factor2, num1);
                break;
            case 7:
                printf("Enter an integer: ");
                scanf("%d", &num1);
                printf("%d! = %llu\n", num1, factorial(num1));
                break;
            case 8:
                printf("Enter the base: ");
                double base;
                scanf("%lf", &base);
                printf("Enter the exponent: ");
                scanf("%d", &num2);
                printf("%.2lf^%d = %.2lf\n", base, num2, power(base, num2));
                break;
            case 9:
                printf("Enter the number of terms: ");
                scanf("%d", &num1);
                fibonacci(num1);
                break;
            case 0:
                printf("Good Bye!\n");
                break;
            default:
                printf("Invalid choice, please try again.\n");
        }
    } while (choice != 0);
    return 0;
}
